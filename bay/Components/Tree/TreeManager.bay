/*!
 *  Bayrell Core Library
 *
 *  (c) Copyright 2018-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace Core.Components.Tree;

use Core.UI.UIController;
use Core.UI.Annotations.BindValue;
use Core.UI.Annotations.Event;
use Core.UI.Events.MouseEvent.MouseClickEvent;
use Core.UI.Events.MouseEvent.MouseContextMenuEvent;
use Core.UI.Events.MouseEvent.MouseDoubleClickEvent;
use Core.UI.Events.UserEvent.ChangeEvent;
use Core.UI.Render.CoreManager;
use Core.Components.Tree.TreeItemContextMenuEvent;
use Core.Components.Tree.TreeItemDoubleClickEvent;
use Core.Components.Tree.TreeItemSelectEvent;


class TreeManager extends CoreManager
{
	
	
	@Event{ "event": classof MouseClickEvent, "method_name": "onTreeItemLabelClick" }
	@Event{ "event": classof MouseContextMenuEvent, "method_name": "onTreeItemLabelContextMenu" }
	@Event{ "event": classof MouseDoubleClickEvent, "method_name": "onTreeItemLabelDoubleClick" }
	public assignable UIController tree_item_label = new UIController();
	
	
	/**
	 * Event item click
	 */
	public void onTreeItemLabelClick(MouseClickEvent event)
	{
		/* Set new value */
		string path = event.ui.props.get("data-path");
		this.updateModel({
			"selected": path,
		});
		this.signalOut( new TreeItemSelectEvent{ "path": path, "event": event } );
	}
	
	
	
	/**
	 * Event item click
	 */
	public void onTreeItemLabelContextMenu(MouseContextMenuEvent event)
	{
		/* Set new value */
		string path = event.ui.props.get("data-path");
		this.signalOut( new TreeItemContextMenuEvent{ "path": path, "event": event } );
	}
	
	
	
	/**
	 * Event item double click
	 */
	public void onTreeItemLabelDoubleClick(MouseClickEvent event)
	{
		string path = event.ui.props.get("data-path");
		this.signalOut( new TreeItemDoubleClickEvent{ "path": path, "event": event } );
	}
	
}