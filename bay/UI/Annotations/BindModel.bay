/*!
 *  Bayrell Core Library
 *
 *  (c) Copyright 2018-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace Core.UI.Annotations;

use Core.UI.Annotations.ControllerAnnotation;
use Core.UI.Events.ModelChange;


struct BindModel extends ControllerAnnotation
{
	
	string model = "";
	
	
	/**
	 * Init controller
	 */
	static void initController
	(
		UIController controller, CoreManager manager, 
		ControllerAnnotation annotation, string controller_name
	)
	{
		controller.addSignalOut( static::onChangeModel(manager, annotation), [classof ModelChange] );
	}
	
	
	
	/**
	 * On change
	 */
	static fun onChangeModel(CoreManager manager, Controller annotation) => 
		void (ModelChange event)
		{
			Map map = new Map();
			map.set(annotation.model, event.model);
			
			/* Set new value */
			manager.updateModel(map);
		}
	
}