/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace RuntimeUI;

use Runtime.CoreObject;
use Runtime.Emitter;
use Runtime.Reference;
use RuntimeUI.Render.CoreManager;


class UIController extends CoreObject
{
	public Reference ref = null;
	public Emitter signal_in = new Emitter();
	public Emitter signal_out = new Emitter();	
	public Vector<string> events = new Vector();
	public CoreManager manager = null;
	
	
	/**
	 * Add supported events to controller
	 * @param Collection<string> events
	 */
	public void addEvents(Collection<string> events)
	{
		if (this.events == null) this.events = new Vector();
		for (int i=0; i<events.count(); i++)
		{
			string event = events.item(i);
			if (this.events.indexOf( event ) == -1)
			{
				this.events.push( event );
			}
		}
	}
	
	
	
	/**
	 * Add output signals
	 * @param fun f
	 * @param Collection<string> events
	 */
	public void addSignalOut(fun f, Collection<string> events)
	{
		if (this.signal_out == null) this.signal_out = new Emitter();
		this.signal_out.addMethod(f, events);
		this.addEvents(events);
	}
	
}
