/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace RuntimeUI.Events.MouseEvent;

use RuntimeUI.Events.UserEvent.UserEvent;


struct MouseEvent extends UserEvent
{
	
	public bool altKey = false;
	public int button = 0;
	public int buttons = 0;
	public int clientX = 0;
	public int clientY = 0;
	public bool ctrlKey = false;
	public int detail = 0;
	public int layerX = 0;
	public int layerY = 0;
	public bool metaKey = false;
	public int movementX = 0;
	public int movementY = 0;
	public int offsetX = 0;
	public int offsetY = 0;
	public int pageX = 0;
	public int pageY = 0;
	public int screenX = 0;
	public int screenY = 0;
	public bool shiftKey = false;
	public int x = 0;
	public int y = 0;
	
	
	#switch
	#case ifcode ES6 then
	
	assignEvent(e)
	{
		super.assignEvent(e);
		this.setMap(new Runtime.Dict({
			"altKey": e.altKey,
			"button": e.button,
			"buttons": e.buttons,
			"clientX": e.clientX,
			"clientY": e.clientY,
			"ctrlKey": e.ctrlKey,
			"detail": e.detail,
			"layerX": e.layerX,
			"layerY": e.layerY,
			"metaKey": e.metaKey,
			"movementX": e.movementX,
			"movementY": e.movementY,
			"offsetX": e.offsetX,
			"offsetY": e.offsetY,
			"pageX": e.pageX,
			"pageY": e.pageY,
			"screenX": e.screenX,
			"screenY": e.screenY,
			"shiftKey": e.shiftKey,
			"x": e.x,
			"y": e.y,
		}));
	}
	
	#endswitch
	
	
}

