/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace RuntimeUI.Events.MouseEvent;

use RuntimeUI.Events.UserEvent.UserEvent;


struct MouseEvent extends UserEvent
{
	
	public bool altKey = false;
	public int button = 0;
	public int buttons = 0;
	public int clientX = 0;
	public int clientY = 0;
	public bool ctrlKey = false;
	public int detail = 0;
	public int layerX = 0;
	public int layerY = 0;
	public bool metaKey = false;
	public int movementX = 0;
	public int movementY = 0;
	public int offsetX = 0;
	public int offsetY = 0;
	public int pageX = 0;
	public int pageY = 0;
	public int screenX = 0;
	public int screenY = 0;
	public bool shiftKey = false;
	public int x = 0;
	public int y = 0;
	
	
	#switch
	#case ifcode ES6 then
	
	assignEvent(e)
	{
		super.assignEvent(e);
		this.altKey = e.altKey;
		this.button = e.button;
		this.buttons = e.buttons;
		this.clientX = e.clientX;
		this.clientY = e.clientY;
		this.ctrlKey = e.ctrlKey;
		this.detail = e.detail;
		this.layerX = e.layerX;
		this.layerY = e.layerY;
		this.metaKey = e.metaKey;
		this.movementX = e.movementX;
		this.movementY = e.movementY;
		this.offsetX = e.offsetX;
		this.offsetY = e.offsetY;
		this.pageX = e.pageX;
		this.pageY = e.pageY;
		this.screenX = e.screenX;
		this.screenY = e.screenY;
		this.shiftKey = e.shiftKey;
		this.x = e.x;
		this.y = e.y;
	}
	
	#endswitch
	
	
}

