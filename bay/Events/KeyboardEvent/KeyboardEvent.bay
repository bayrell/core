/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace RuntimeUI.Events.KeyboardEvent;

use Runtime.CoreEvent;
use Runtime.Interfaces.CloneableInterface;
use Runtime.Interfaces.SerializeInterface;
use RuntimeUI.Events.UserEvent.UserEvent;


class KeyboardEvent extends UserEvent implements CloneableInterface, SerializeInterface{
	
	
	public serializable cloneable bool altKey = false;
	public serializable cloneable int charCode = 0;
	public serializable cloneable string code = "";
	public serializable cloneable bool ctrlKey = false;
	public serializable cloneable string key = false;
	public serializable cloneable int keyCode = 0;
	public serializable cloneable string locale = "";
	public serializable cloneable int location = 0;
	public serializable cloneable bool repeat = false;
	public serializable cloneable bool shiftKey = false;
	public serializable cloneable int which = 0;
	
	
	#switch
	#case ifcode ES6 then
	
	assignEvent(e){
		super.assignEvent(e);
		this.altKey = e.altKey;
		this.charCode = e.charCode;
		this.code = e.code;
		this.ctrlKey = e.ctrlKey;
		this.key = e.key;
		this.keyCode = e.keyCode;
		this.locale = e.locale;
		this.location = e.location;
		this.repeat = e.repeat;
		this.shiftKey = e.shiftKey;
		this.which = e.which;
	}
	
	#endswitch
	
	
}

